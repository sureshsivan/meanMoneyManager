"use strict";var ApplicationConfiguration=function(){var applicationModuleName="meanmoneymanager",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularMoment","ngTagsInput"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("incexps"),ApplicationConfiguration.registerModule("trackers",["angular-loading-bar","ngAnimate"]),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("vaults"),angular.module("admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Administer","admin","dropdown","/admin(/admin)?",!1,["admin"]),Menus.addSubMenuItem("topbar","admin","List Trackers","trackersall",null,!1,["admin"]),Menus.addSubMenuItem("topbar","admin","List Users","usersall",null,!1,["admin"])}]),angular.module("admin").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{url:"/admin",templateUrl:"modules/admin/views/admin.client.view.html"})}]),angular.module("admin").controller("AdminControllerController",["$scope",function(){}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.alerts=[{iconCls:"glyphicon-user",btnStyle:"btn-success",val:"XXXXX",note:"Some Note Here"},{iconCls:"glyphicon-th",btnStyle:"btn-danger",val:"XXXXX",note:"Some Note Here"},{iconCls:"glyphicon-thumbs-up",btnStyle:"btn-danger",val:"XXXXX",note:"Some Note Here"},{iconCls:"glyphicon-envelope",btnStyle:"btn-warning",val:"XXXXX",note:"Some Note Here"},{iconCls:"glyphicon-retweet",btnStyle:"btn-success",val:"XXXXX",note:"Some Note Here"},{iconCls:"glyphicon-globe",btnStyle:"btn-primary",val:"XXXXX",note:"Some Note Here"}]}]),angular.module("core").controller("InfoController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("StatusBarController",["$scope","Authentication","AppMessenger","$timeout",function($scope,Authentication,AppMessenger,$timeout){var autoClose=function(){$timeout(function(){$scope.alert=null},2e3)};$scope.closeAlert=function(){$scope.alert=null},AppMessenger.getInfoMsg(function(e,data){$scope.alert={type:"info",msg:data},autoClose()}),AppMessenger.getWarnMsg(function(e,data){$scope.alert={type:"warning",msg:data},autoClose()}),AppMessenger.getErrMsg(function(e,data){$scope.alert={type:"danger",msg:data},autoClose()})}]),angular.module("incexps").service("CoreLocaleMessages",["$http",function($http){var incexpLocaleMessageService={};return incexpLocaleMessageService.pullMessages=function(){return $http.get("modules/incexps/json/labels.json",{cached:!0})},incexpLocaleMessageService.get=function(key){return this.msgs?this.msgs[key]:void this.pullMessages().then(function(response){this.msgs=response})},incexpLocaleMessageService}]),angular.module("core").factory("Notify",["$rootScope",function($rootScope){var notify={};return notify.sendMsg=function(msg,data){data=data||{},$rootScope.$emit(msg,data)},notify.getMsg=function(msg,func,scope){var unbind=$rootScope.$on(msg,func);scope&&scope.$on("destroy",unbind)},notify}]),angular.module("core").service("AppStatics",["$http","$q",function($http,$q){var appStatics={};return appStatics.getCurrencies=function(){return this.currencies},appStatics.loadCurrencies=function(){var deferred=$q.defer();return $http.get("modules/core/json/currencies.json").then(function(response){appStatics.currencies=response.data,deferred.resolve(response.data)}),deferred.promise},appStatics.getCurrencyObj=function(currencyId){console.log(currencyId);for(var i in this.currencies){var currency=this.currencies[i];if(currency.id===currencyId)return currency}},appStatics}]),angular.module("core").service("AppMessenger",["$rootScope",function($rootScope){var appMessenger={};return appMessenger.sendInfoMsg=function(data){data=data||{},$rootScope.$emit("INFO",data)},appMessenger.sendWarnMsg=function(data){data=data||{},$rootScope.$emit("WARN",data)},appMessenger.sendErrMsg=function(data){data=data||{},$rootScope.$emit("ERR",data)},appMessenger.getInfoMsg=function(func,scope){var unbind=$rootScope.$on("INFO",func);scope&&scope.$on("destroy",unbind)},appMessenger.getWarnMsg=function(func,scope){var unbind=$rootScope.$on("WARN",func);scope&&scope.$on("destroy",unbind)},appMessenger.getErrMsg=function(func,scope){var unbind=$rootScope.$on("ERR",func);scope&&scope.$on("destroy",unbind)},appMessenger}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!1,["user","admin"])}]),angular.module("incexps").constant("INCEXP_CONST",{INCEXP_LIST_TEMPLATE_URL:"modules/incexps/templates/incexps-list-template.client.html",LIST_INCEXPS_STATE_NAME:"listTrackerIncexps",LIST_INCEXPS_STATE_URL:"/trackerincexps/:trackerId",LIST_INCEXPS_STATE_TEMPLATE_URL:"modules/incexps/views/list-incexps.client.view.html",CREATE_INCEXP_STATE_NAME:"createIncexp",CREATE_INCEXP_STATE_URL:"/trackerincexps/:trackerId/create",CREATE_INCEXP_STATE_TEMPLATE_URL:"modules/incexps/views/create-incexp.client.view.html",EDIT_INCEXP_STATE_NAME:"editIncexp",EDIT_INCEXP_STATE_URL:"/trackerincexps/:trackerId/:incexpId/edit",EDIT_INCEXP_STATE_TEMPLATE_URL:"modules/incexps/views/edit-incexp.client.view.html"}),angular.module("incexps").run(["Menus",function(){}]),angular.module("incexps").config(["$stateProvider","INCEXP_CONST",function($stateProvider,INCEXP_CONST){$stateProvider.state(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,{url:INCEXP_CONST.LIST_INCEXPS_STATE_URL,templateUrl:INCEXP_CONST.LIST_INCEXPS_STATE_TEMPLATE_URL}).state(INCEXP_CONST.CREATE_INCEXP_STATE_NAME,{url:INCEXP_CONST.CREATE_INCEXP_STATE_URL,templateUrl:INCEXP_CONST.CREATE_INCEXP_STATE_TEMPLATE_URL}).state(INCEXP_CONST.EDIT_INCEXP_STATE_NAME,{url:INCEXP_CONST.EDIT_INCEXP_STATE_URL,templateUrl:INCEXP_CONST.EDIT_INCEXP_STATE_TEMPLATE_URL})}]),angular.module("incexps").controller("IncexpsController",["$scope","$stateParams","$location","Authentication","TrackerIncexps","$modal","$log","moment","AppStatics","Notify","VaultStatics","$state","IncexpStatics","AppMessenger","IncexpLocaleMessages","$q","INCEXP_CONST",function($scope,$stateParams,$location,Authentication,TrackerIncexps,$modal,$log,moment,AppStatics,Notify,VaultStatics,$state,IncexpStatics,AppMessenger,IncexpLocaleMessages,$q,INCEXP_CONST){var _this=this;_this.authentication=Authentication,_this.vaultStatics=VaultStatics,_this.appStatics=AppStatics,_this.incexpStatics=IncexpStatics,$scope.$stateParams=$stateParams;var minDate=new Date;minDate.setDate(minDate.getDate()-60),$scope.minDate=minDate,$scope.maxDate=new Date;var pullMsgs=function(){var deferred=$q.defer();return IncexpLocaleMessages.pullMessages().then(function(labels){_this.labelsObj=labels,deferred.resolve(null)}),deferred.promise},pullVaults=function(){var deferred=$q.defer();return _this.vaultStatics.queryVaults($stateParams.trackerId).then(function(response){_this.vaultsResult=[],response.data.map(function(item){_this.vaultsResult.push(item)}),deferred.resolve(null)}),deferred.promise},pullIncexpTypes=function(){var deferred=$q.defer(),cachedVal=_this.incexpStatics.getIncexpTypes();return cachedVal?(_this.incexpTypes=cachedVal,deferred.resolve(null)):_this.incexpStatics.loadIncexpTypes().then(function(response){_this.incexpTypes=[],response.map(function(item){_this.incexpTypes.push(item)}),deferred.resolve(null)}),deferred.promise},pullTags=function(){var deferred=$q.defer(),cachedVal=_this.incexpStatics.getIncexpTags();return cachedVal?(_this.incexpTags=cachedVal,deferred.resolve(null)):_this.incexpStatics.loadIncexpTags().then(function(response){_this.incexpTags=[],response.map(function(item){_this.incexpTags.push(item)}),deferred.resolve(null)}),deferred.promise},pullApprovalTypes=function(){var displayMode="CREATE",deferred=$q.defer(),cachedVal=_this.incexpStatics.getApprovalTypes();return cachedVal?(_this.approvalTypes=[],cachedVal.map(function(item){displayMode?item&&item.displayMode&&(item.displayMode.indexOf(displayMode)>-1||item.displayMode.indexOf("ALL")>-1)&&_this.approvalTypes.push(item):_this.approvalTypes.push(item)}),deferred.resolve(null)):_this.incexpStatics.loadApprovalTypes().then(function(response){_this.approvalTypes=[],response.map(function(item){displayMode?item&&item.displayMode&&(item.displayMode.indexOf(displayMode)>-1||item.displayMode.indexOf("ALL")>-1)&&_this.approvalTypes.push(item):_this.approvalTypes.push(item)}),deferred.resolve(null)}),deferred.promise},loadCurrencies=function(){return AppStatics.loadCurrencies()},pullIncexps=function(){return _this.trackerIncexps=TrackerIncexps.listTrackerIncexps($stateParams),_this.trackerIncexps.$promise},pullIncexp=function(){var deferred=$q.defer();return TrackerIncexps.get($stateParams).$promise.then(function(response){$scope.incexp=response,_this.approvalModel=$scope.incexp.isPending?{isPending:$scope.incexp.isPending,pendingType:$scope.incexp.pendingType,pendingWith:$scope.incexp.pendingWith,pendingMsg:$scope.incexp.pendingMsg}:{isPending:!1},deferred.resolve(null)}),deferred.promise},loadIncexpAlerts=function(response){var deferred=$q.defer();return response.$promise.then(function(incexps){for(var i=0;i<incexps.length;i++){var incexp=incexps[i];incexp.infoAlerts=[],incexp.infoAlerts.push(incexp.isPending?incexp.pendingWith._id===Authentication.user._id?{clazz:"fa-exclamation-circle danger-icon",tooltip:_this.labelsObj["app.incexps.tt.requireActionFrmMe"]}:{clazz:"fa-exclamation-circle warn-icon",tooltip:_this.labelsObj["app.incexps.tt.requireActionFrm"]+incexp.pendingWith.displayName}:{clazz:"fa-check-circle info-icon",tooltip:_this.labelsObj["app.incexps.tt.allOk"]}),incexp.infoAlerts.push(incexp.owner._id===Authentication.user._id?{clazz:"fa-user info-icon",tooltip:_this.labelsObj["app.incexps.tt.createdByMe"]}:{clazz:"fa-user-secret info-icon",tooltip:_this.labelsObj["app.incexps.tt.createdByOther"]}),incexp.collapsed=!0,incexp.currencyObj=AppStatics.getCurrencyObj(incexp.tracker.currency),deferred.resolve(null)}}),deferred.promise},bootmodule=function(){$scope.incexp?console.log("Sample Log"):_this.approvalModel={isPending:!1,pendingType:null,pendingMsg:null},_this.getLabel=function(key){return _this.labelsObj[key]},_this.getCurrencies=function(){return _this.appStatics.getCurrencies()},_this.getApprovalTypes=function(){return _this.incexpStatics.getApprovalTypesForCreation()},_this.onChangeReqApproval=function(val){val||(_this.pendingType=null,_this.pendingWith=null)},_this.openDatePicker=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.datePickerOpened=!0},_this.expandRow=function(incexpArg){if(!incexpArg.collapsed)return void(incexpArg.collapsed=!0);for(var i=0;i<_this.trackerIncexps.length;i++){var incexp=_this.trackerIncexps[i];incexp.collapsed=incexp._id===incexpArg._id?!1:!0}},_this.canEdit=function(incexp){return incexp&&incexp.owner&&(incexp.owner._id===Authentication.user._id||incexp.pendingWith&&"UPD_REQ"===incexp.pendingType&&incexp.pendingWith._id===Authentication.user._id)&&!(incexp.isPending&&"UPD_ACC_REQ"===incexp.pendingType)},_this.canDelete=function(incexp){return incexp&&incexp.owner&&incexp.owner._id===Authentication.user._id&&!(incexp.isPending&&"UPD_ACC_REQ"===incexp.pendingType)},_this.canRequestEditAccess=function(incexp){return incexp&&incexp.owner&&incexp.owner._id!==Authentication.user._id&&!incexp.pendingWith},_this.canApproveEditRequest=function(incexp){return incexp&&incexp.isPending&&incexp.pendingWith._id===Authentication.user._id&&incexp.owner._id===Authentication.user._id&&"UPD_ACC_REQ"===incexp.pendingType},_this.createIncexp=function(){_this.incexp={},$state.go(INCEXP_CONST.CREATE_INCEXP_STATE_NAME,$stateParams)},_this.editIncexp=function(updatedIncexp){$state.go(INCEXP_CONST.EDIT_INCEXP_STATE_NAME,{trackerId:$stateParams.trackerId,incexpId:updatedIncexp._id})},_this.saveIncexp=function(){var incexp=new TrackerIncexps({displayName:_this.displayName,description:_this.description,type:_this.type,tracker:$stateParams.trackerId,tags:_this.tags,evDate:_this.evDate,amount:_this.amount,vault:_this.vault,owner:_this.authentication.user._id,created:_this.created});_this.approvalModel&&_this.approvalModel.isPending&&(incexp.isPending=_this.approvalModel.isPending,incexp.pendingType=_this.approvalModel.pendingType,incexp.pendingWith=_this.approvalModel.pendingWith._id,incexp.pendingMsg=_this.approvalModel.pendingMsg),incexp.$save($stateParams,function(){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,$stateParams),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.createdIncexp"])},function(errorResponse){$scope.error=errorResponse.data.message})},_this.cancel=function(){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,$stateParams)},_this.updateIncexp=function(updatedIncexp){var incexp=updatedIncexp;_this.approvalModel&&_this.approvalModel.isPending?(incexp.isPending=_this.approvalModel.isPending,incexp.pendingType=_this.approvalModel.pendingType,incexp.pendingWith=_this.approvalModel.pendingWith._id,incexp.pendingMsg=_this.approvalModel.pendingMsg):(incexp.isPending=!1,incexp.pendingType=null,incexp.pendingWith=null,incexp.pendingMsg=null),delete incexp.tracker,incexp.$update($stateParams,function(){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,$stateParams),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.updatedIncexp"])},function(errorResponse){$scope.error=errorResponse.data.message})},_this.approveIncexpChanges=function(updatedIncexp){var incexp=updatedIncexp;delete incexp.isPending,delete incexp.pendingType,delete incexp.pendingWith,delete incexp.pendingMsg,delete incexp.tracker,incexp.$approveIncexpChanges($stateParams,function(){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,$stateParams),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.approveIncexpChanges"])},function(errorResponse){$scope.error=errorResponse.data.message})},_this.requestForEdit=function(incexp){incexp.$requestEditAccess({incexpId:incexp._id},function(){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,$stateParams,{reload:!0}),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.reqEditAccess"])})},_this.approveEditAccessRequest=function(incexp){incexp.$approveEditAccessRequest({incexpId:incexp._id},function(){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,$stateParams,{reload:!0}),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.approveIncexpEditAccReq"])})},_this.rejectEditAccessRequest=function(incexp){incexp.$rejectEditAccessRequest({incexpId:incexp._id},function(){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,$stateParams,{reload:!0}),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.rejectIncexpEditAccReq"])})},_this.remove=function(incexp){incexp&&incexp.$remove({incexpId:incexp._id,trackerId:$stateParams.trackerId},function(){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,$stateParams,{reload:!0}),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.deletedIncexp"])})}};$state.current.name===INCEXP_CONST.LIST_INCEXPS_STATE_NAME?pullMsgs().then(loadCurrencies).then(pullIncexps).then(loadIncexpAlerts).then(bootmodule):$state.current.name===INCEXP_CONST.CREATE_INCEXP_STATE_NAME?(pullMsgs().then(pullVaults).then(pullIncexpTypes).then(pullTags).then(pullApprovalTypes).then(bootmodule),_this.approvalModel={isPending:!1,pendingType:null,pendingMsg:null}):$state.current.name===INCEXP_CONST.EDIT_INCEXP_STATE_NAME&&pullMsgs().then(pullVaults).then(pullIncexpTypes).then(pullTags).then(pullApprovalTypes).then(pullIncexp).then(bootmodule)}]),angular.module("incexps").directive("incexpsList",["INCEXP_CONST",function(INCEXP_CONST){return{restrict:"E",transclude:!0,templateUrl:INCEXP_CONST.INCEXP_LIST_TEMPLATE_URL,link:function(){}}}]).directive("selectUsers",["Authentication","UserStatics",function(Authentication,UserStatics){return{restrict:"E",transclude:!0,templateUrl:UserStatics.getListUsersComboTmpl(),link:function(){},scope:{currentUser:"=user",ngDisabled:"="},controller:["$scope",function($scope){$scope.authentication=Authentication;var curUsersArr=[];curUsersArr.push(Authentication.user._id),$scope.queryUsers=function(query){return UserStatics.queryUsers(query,curUsersArr.join())}}]}}]).directive("incexpApproval",["Authentication","UserStatics",function(Authentication){function validateApproval(isPending,pendingType,pendingWith,pendingMsg,ngModel,form){ngModel.$setValidity("pendingTypeRequired",!0),ngModel.$setValidity("pendingWithRequired",!0),isPending&&(pendingType?pendingWith&&pendingWith._id||(ngModel.$dirty=!0,ngModel.$pristine=!1,ngModel.$setValidity("pendingWithRequired",!1),form.$dirty=!0,form.$pristine=!1):(ngModel.$dirty=!0,ngModel.$pristine=!1,ngModel.$setValidity("pendingTypeRequired",!1),form.$dirty=!0,form.$pristine=!1))}function buildModel(isPending,pendingType,pendingWith,pendingMsg,ngModel){ngModel.$viewValue=ngModel.$viewValue||{},ngModel.$viewValue.isPending=isPending,ngModel.$viewValue.pendingType=pendingType,ngModel.$viewValue.pendingWith=pendingWith,ngModel.$viewValue.pendingMsg=pendingMsg}var ID=0;return{restrict:"E",require:["ngModel","^form"],transclude:!0,replace:!0,scope:{name:"@",label:"=",pendingTypeDefaultLabel:"=",selectUserPlaceholder:"=",pendingMsgPlaceholder:"=",approvalTypes:"="},templateUrl:"modules/incexps/templates/incexps-approval-field-template.client.html",link:function(scope,element,attrs,ctrl){var ngModel=ctrl[0],form=ctrl[1];scope.name?scope.subFormName=scope.name:(scope.subFormName="_range"+ID,ID++),ngModel.$render=function(){ngModel&&ngModel.$viewValue&&ngModel.$viewValue.isPending?(scope.isPending=ngModel.$viewValue.isPending,scope.pendingType=ngModel.$viewValue.pendingType,scope.pendingWith=ngModel.$viewValue.pendingWith,scope.pendingMsg=ngModel.$viewValue.pendingMsg):(scope.isPending=!1,scope.pendingType=null,scope.pendingWith=null,scope.pendingMsg=null)},scope.$watch("isPending",function(newVal,oldVal){newVal!==oldVal&&(validateApproval(newVal,scope.pendingType,scope.pendingWith,scope.pendingMsg,ngModel,form),buildModel(newVal,scope.pendingType,scope.pendingWith,scope.pendingMsg,ngModel))}),scope.$watch("pendingType",function(newVal,oldVal){newVal!==oldVal&&(validateApproval(scope.isPending,newVal,scope.pendingWith,scope.pendingMsg,ngModel,form),buildModel(scope.isPending,newVal,scope.pendingWith,scope.pendingMsg,ngModel))}),scope.$watch("pendingWith",function(newVal,oldVal){newVal!==oldVal&&(validateApproval(scope.isPending,scope.pendingType,newVal,scope.pendingMsg,ngModel,form),buildModel(scope.isPending,scope.pendingType,newVal,scope.pendingMsg,ngModel))}),scope.$watch("pendingMsg",function(newVal,oldVal){newVal!==oldVal&&(validateApproval(scope.isPending,scope.pendingType,scope.pendingWith,newVal,ngModel,form),buildModel(scope.isPending,scope.pendingType,scope.pendingWith,newVal,ngModel))}),scope.applyDisableForPendingCheckbox=function(incexp){return incexp&&incexp.owner?Authentication.user._id!==incexp.owner._id:!1},scope.applyDisablePendingFields=function(isSelected,incexp){var toDisable=!1;return"undefined"==typeof incexp?toDisable=!isSelected:incexp&&incexp.owner&&(toDisable=Authentication.user._id!==incexp.owner._id||!isSelected),toDisable}}}}]),angular.module("core").service("AppLocaleMessages",["$http",function($http){var appLocaleMessages={};return appLocaleMessages.localeMessages={"app.err.msg.XX":"App Error Message","app.warn.msg.XX":"App Warn Message","app.info.msg.XX":"App Info Message"},appLocaleMessages.getMsg=function(key){return 0===Object.getOwnPropertyNames(appLocaleMessages.localeMessages).length?$http.get("/users/search",{params:{locale:"en"}}).then(function(){return appLocaleMessages[key]},function(){}):appLocaleMessages[key]},appLocaleMessages}]),angular.module("incexps").factory("Incexps",["$resource",function($resource){return $resource("incexps/:incexpId",{incexpId:"@_id"},{update:{method:"PUT"}})}]),angular.module("incexps").service("IncexpLocaleMessages",["$http","$q",function($http,$q){return{pullMessages:function(){var _this=this,deferred=$q.defer();return _this.msgs?deferred.resolve(_this.msgs):$http.get("modules/incexps/json/labels.json").success(function(response){_this.msgs=response,deferred.resolve(_this.msgs)}),deferred.promise}}}]),angular.module("incexps").service("IncexpStatics",["$http","$q",function($http,$q){var incexpStatics={};return incexpStatics.getIncexpTypes=function(){return this.incexpTypes},incexpStatics.loadIncexpTypes=function(){var deferred=$q.defer();return $http.get("modules/incexps/json/incexpTypes.json").then(function(response){incexpStatics.incexpTypes=response.data,deferred.resolve(response.data)}),deferred.promise},incexpStatics.getIncexpTags=function(){return this.incexpTags},incexpStatics.loadIncexpTags=function(){var deferred=$q.defer();return $http.get("modules/incexps/json/incexpTags.json").then(function(response){incexpStatics.incexpTags=response.data,deferred.resolve(response.data)}),deferred.promise},incexpStatics.getApprovalTypes=function(){return this.approvalTypes},incexpStatics.loadApprovalTypes=function(){var deferred=$q.defer();return $http.get("modules/incexps/json/incexpApprovalTypes.json").then(function(response){incexpStatics.approvalTypes=response.data,deferred.resolve(response.data)}),deferred.promise},incexpStatics}]),angular.module("incexps").factory("TrackerIncexps",["$resource",function($resource){return $resource("trackerincexps/:trackerId/:incexpId",null,{update:{method:"PUT"},listTrackerIncexps:{method:"GET",params:{trackerId:"trackerId"},isArray:!0},requestEditAccess:{url:"incexps/requestEditAccess/:incexpId",method:"PUT"},approveEditAccessRequest:{url:"incexps/approveEditAccessRequest/:incexpId",method:"PUT"},rejectEditAccessRequest:{url:"incexps/rejectEditAccessRequest/:incexpId",method:"PUT"},approveIncexpChanges:{url:"incexps/approveChanges/:incexpId",method:"PUT"}})}]),angular.module("trackers").constant("TRACKER_CONST",{TRACKER_LIST_TEMPLATE_URL:"modules/trackers/templates/trackers-list-template.client.html",LIST_TRACKERS_STATE_NAME:"listTrackers",LIST_TRACKERS_STATE_URL:"/trackers",LIST_TRACKERS_STATE_TEMPLATE_URL:"modules/trackers/views/list-trackers.client.view.html",CREATE_TRACKER_STATE_NAME:"createTracker",CREATE_TRACKER_STATE_URL:"/trackers/create",CREATE_TRACKER_STATE_TEMPLATE_URL:"modules/trackers/views/create-tracker.client.view.html",EDIT_TRACKER_STATE_NAME:"editTracker",EDIT_TRACKER_STATE_URL:"/trackers/:trackerId/edit",EDIT_TRACKER_STATE_TEMPLATE_URL:"modules/trackers/views/edit-tracker.client.view.html"}),angular.module("trackers").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Trackers","trackers")}]).config(["cfpLoadingBarProvider",function(cfpLoadingBarProvider){cfpLoadingBarProvider.latencyThreshold=10}]),angular.module("trackers").config(["$stateProvider","TRACKER_CONST",function($stateProvider,TRACKER_CONST){$stateProvider.state(TRACKER_CONST.LIST_TRACKERS_STATE_NAME,{url:TRACKER_CONST.LIST_TRACKERS_STATE_URL,templateUrl:TRACKER_CONST.LIST_TRACKERS_STATE_TEMPLATE_URL}).state(TRACKER_CONST.CREATE_TRACKER_STATE_NAME,{url:TRACKER_CONST.CREATE_TRACKER_STATE_URL,templateUrl:TRACKER_CONST.CREATE_TRACKER_STATE_TEMPLATE_URL}).state(TRACKER_CONST.EDIT_TRACKER_STATE_NAME,{url:TRACKER_CONST.EDIT_TRACKER_STATE_URL,templateUrl:TRACKER_CONST.EDIT_TRACKER_STATE_TEMPLATE_URL})}]),angular.module("trackers").controller("TrackersController",["$scope","$state","$stateParams","Authentication","Trackers","TrackerLocaleMessages","TRACKER_CONST","VAULT_CONST","INCEXP_CONST","AppStatics","UserStatics","AppMessenger","moment","$q",function($scope,$state,$stateParams,Authentication,Trackers,TrackerLocaleMessages,TRACKER_CONST,VAULT_CONST,INCEXP_CONST,AppStatics,UserStatics,AppMessenger,moment,$q){var _this=this;_this.appStatics=AppStatics,_this.userStatics=UserStatics,_this.authentication=Authentication,_this.assignedUsers=[],_this.assignedUsers.push(Authentication.user);var pullMsgs=function(){var deferred=$q.defer();return TrackerLocaleMessages.pullMessages().then(function(labels){_this.labelsObj=labels,deferred.resolve(null)}),deferred.promise},pullTrackers=function(){return _this.trackers=Trackers.query(),_this.trackers.$promise},pullTracker=function(){return $scope.tracker=Trackers.get({trackerId:$stateParams.trackerId}),$scope.tracker.$promise},pullCurrencies=function(){var deferred=$q.defer(),cachedVal=_this.appStatics.getCurrencies();return cachedVal?(_this.currencies=cachedVal,deferred.resolve(null)):_this.appStatics.loadCurrencies().then(function(response){_this.currencies=[],response.map(function(item){_this.currencies.push(item)}),deferred.resolve(null)}),deferred.promise},bootmodule=function(){_this.getLocalTime=function(time){return moment(time).toString()},_this.getOwnerTxt=function(tracker){return tracker.owner&&tracker.owner._id&&tracker.owner._id===Authentication.user._id?"Me":tracker.owner&&tracker.owner.displayName?tracker.owner.displayName:"No Name"},_this.getUsersTxt=function(tracker){var users="";if(tracker.users&&tracker.users.length>1)for(var i=0;i<tracker.users.length;i++)tracker.owner._id!==tracker.users[i]._id&&(users=""!==users?users+(i===tracker.users.length-2?" , ":" and ")+(tracker.users[i]._id===Authentication.user._id?"Me":tracker.users[i].displayName):tracker.users[i].displayName);else tracker.users&&1===tracker.users.length&&(users="No one else - this is my private tracker");return users},_this.loadVaults=function(trackerId){$state.go(VAULT_CONST.LIST_VAULTS_STATE_NAME,{trackerId:trackerId})},_this.loadIncexps=function(trackerId){$state.go(INCEXP_CONST.LIST_INCEXPS_STATE_NAME,{trackerId:trackerId})},_this.createTracker=function(){_this.tracker={},$state.go(TRACKER_CONST.CREATE_TRACKER_STATE_NAME)},_this.editTracker=function(tracker){$state.go(TRACKER_CONST.EDIT_TRACKER_STATE_NAME,{trackerId:tracker._id})},_this.cancel=function(){$state.go(TRACKER_CONST.LIST_TRACKERS_STATE_NAME)},_this.saveTracker=function(){var tracker=new Trackers({displayName:_this.displayName,description:_this.description,currency:_this.currency,owner:_this.owner,created:_this.created});tracker.users=[],angular.forEach(_this.assignedUsers,function(value){tracker.users.push(value._id)}),tracker.$save(function(){$state.go(TRACKER_CONST.LIST_TRACKERS_STATE_NAME),AppMessenger.sendInfoMsg(_this.labelsObj["app.trackers.info.msg.createdTracker"])},function(errorResponse){$scope.error=errorResponse.data.message})},_this.updateTracker=function(updatedTracker){var tracker=updatedTracker,users=[],owner=tracker.owner._id;angular.forEach(tracker.users,function(value){users.push(value._id)}),tracker.owner=owner,tracker.users=users,tracker.$update(function(){$state.go(TRACKER_CONST.LIST_TRACKERS_STATE_NAME),AppMessenger.sendInfoMsg(_this.labelsObj["app.trackers.info.msg.updatedTracker"])},function(errorResponse){$scope.error=errorResponse.data.message})},_this.remove=function(tracker){tracker&&tracker.$remove(function(){$state.go(TRACKER_CONST.LIST_TRACKERS_STATE_NAME,$stateParams,{reload:!0}),AppMessenger.sendInfoMsg(_this.labelsObj["app.trackers.info.msg.deletedTracker"])},function(errorResponse){$scope.error=errorResponse.data.message})}};$state.current.name===TRACKER_CONST.LIST_TRACKERS_STATE_NAME?pullMsgs().then(pullTrackers).then(bootmodule):$state.current.name===TRACKER_CONST.CREATE_TRACKER_STATE_NAME?pullMsgs().then(pullCurrencies).then(bootmodule):$state.current.name===TRACKER_CONST.EDIT_TRACKER_STATE_NAME&&pullMsgs().then(pullCurrencies).then(pullTracker).then(bootmodule)}]),angular.module("trackers").directive("trackersList",["TRACKER_CONST",function(TRACKER_CONST){return{restrict:"E",transclude:!0,templateUrl:TRACKER_CONST.TRACKER_LIST_TEMPLATE_URL,link:function(){}}}]).directive("addUsers",["Authentication","UserStatics",function(Authentication,UserStatics){return{restrict:"E",
transclude:!0,templateUrl:UserStatics.getAddUsersTmpl(),link:function(){},scope:{assignedUsers:"=users",placeholder:"=",btntext:"=",ttOwner:"=",ttUser:"=",ownerTxt:"="},controller:["$scope",function($scope){$scope.authentication=Authentication,$scope.queryUsers=function(query){var curUsersArr=[];return angular.forEach($scope.assignedUsers,function(value){curUsersArr.push(value._id)}),UserStatics.queryUsers(query,curUsersArr.join())},$scope.assignNewUser=function(user){$scope.currentUser=null,$scope.assignedUsers.push(user)},$scope.removeUser=function(index){$scope.assignedUsers.splice(index,1)}}]}}]),angular.module("incexps").service("TrackerLocaleMessages",["$http","$q",function($http,$q){return{pullMessages:function(){var _this=this,deferred=$q.defer();return _this.msgs?deferred.resolve(_this.msgs):$http.get("modules/trackers/json/labels.json").success(function(response){_this.msgs=response,deferred.resolve(_this.msgs)}),deferred.promise}}}]),angular.module("trackers").factory("Trackers",["$resource",function($resource){return $resource("trackers/:trackerId",{trackerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("core").service("UserStatics",["$http",function($http){var userStatics={};return userStatics.getAddUsersTmpl=function(){return"modules/users/views/add-users-template.html"},userStatics.getListUsersComboTmpl=function(){return"modules/users/views/list-users-combo-template.html"},userStatics.queryUsers=function(query,users){return $http.get("/users/search",{params:{q:query,nu:users}}).then(function(response){return response.data.map(function(item){return item})})},userStatics}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("vaults").constant("VAULT_CONST",{VAULT_LIST_TEMPLATE_URL:"modules/vaults/templates/vaults-list-template.client.html",LIST_VAULTS_STATE_NAME:"listTrackerVaults",LIST_VAULTS_STATE_URL:"/trackervaults/:trackerId",LIST_VAULTS_STATE_TEMPLATE_URL:"modules/vaults/views/list-vaults.client.view.html",CREATE_VAULT_STATE_NAME:"createVault",CREATE_VAULT_STATE_URL:"/trackervaults/:trackerId/create",CREATE_VAULT_STATE_TEMPLATE_URL:"modules/vaults/views/create-vault.client.view.html",EDIT_VAULT_STATE_NAME:"editVault",EDIT_VAULT_STATE_URL:"/trackervaults/:trackerId/:vaultId/edit",EDIT_VAULT_STATE_TEMPLATE_URL:"modules/vaults/views/edit-vault.client.view.html"}),angular.module("vaults").run(["Menus",function(){}]),angular.module("vaults").config(["$stateProvider","VAULT_CONST",function($stateProvider,VAULT_CONST){$stateProvider.state(VAULT_CONST.LIST_VAULTS_STATE_NAME,{url:VAULT_CONST.LIST_VAULTS_STATE_URL,templateUrl:VAULT_CONST.LIST_VAULTS_STATE_TEMPLATE_URL}).state(VAULT_CONST.CREATE_VAULT_STATE_NAME,{url:VAULT_CONST.CREATE_VAULT_STATE_URL,templateUrl:VAULT_CONST.CREATE_VAULT_STATE_TEMPLATE_URL}).state(VAULT_CONST.EDIT_VAULT_STATE_NAME,{url:VAULT_CONST.EDIT_VAULT_STATE_URL,templateUrl:VAULT_CONST.EDIT_VAULT_STATE_TEMPLATE_URL})}]),angular.module("vaults").controller("VaultsController",["$scope","$stateParams","Authentication","$state","VAULT_CONST","TrackerVaults","moment","AppStatics","AppMessenger","VaultLocaleMessages","$q",function($scope,$stateParams,Authentication,$state,VAULT_CONST,TrackerVaults,moment,AppStatics,AppMessenger,VaultLocaleMessages,$q){var _this=this;_this.authentication=Authentication,_this.appStatics=AppStatics,$scope.$stateParams=$stateParams;var pullMsgs=function(){var deferred=$q.defer();return VaultLocaleMessages.pullMessages().then(function(labels){_this.labelsObj=labels,deferred.resolve(null)}),deferred.promise},pullVaults=function(){return _this.trackerVaults=TrackerVaults.listTrackerVaults($stateParams),_this.trackerVaults.$promise},pullVault=function(){return $scope.vault=TrackerVaults.get($stateParams),$scope.vault.$promise},bootmodule=function(){_this.getOwnerTxt=function(vault){return vault.owner&&vault.owner._id&&vault.owner._id===Authentication.user._id?"Me":vault.owner&&vault.owner.displayName?vault.owner.displayName:"No Name"},_this.createVault=function(){_this.vault={},$state.go(VAULT_CONST.CREATE_VAULT_STATE_NAME,$stateParams)},_this.editVault=function(vault){$state.go(VAULT_CONST.EDIT_VAULT_STATE_NAME,{trackerId:$stateParams.trackerId,vaultId:vault._id})},_this.cancel=function(){$state.go(VAULT_CONST.LIST_VAULTS_STATE_NAME,$stateParams)},_this.saveVault=function(){var vault=new TrackerVaults({displayName:_this.displayName,description:_this.description,tracker:$stateParams.trackerId,owner:_this.authentication.user._id,created:_this.created});vault.$save($stateParams,function(){$state.go(VAULT_CONST.LIST_VAULTS_STATE_NAME,$stateParams),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.createdVault"])},function(errorResponse){$scope.error=errorResponse.data.message})},_this.updateVault=function(updatedVault){{var vault=updatedVault;vault.tracker._id}delete vault.tracker,vault.$update($stateParams,function(){$state.go(VAULT_CONST.LIST_VAULTS_STATE_NAME,$stateParams),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.updatedVault"])},function(errorResponse){$scope.error=errorResponse.data.message})},_this.deleteVault=function(vault){vault&&vault.$remove({trackerId:$stateParams.trackerId,vaultId:vault._id},function(){$state.go(VAULT_CONST.LIST_VAULTS_STATE_NAME,$stateParams,{reload:!0}),AppMessenger.sendInfoMsg(_this.labelsObj["app.vaults.info.msg.deletedVault"])})}};$state.current.name===VAULT_CONST.LIST_VAULTS_STATE_NAME?pullMsgs().then(pullVaults).then(bootmodule):$state.current.name===VAULT_CONST.CREATE_VAULT_STATE_NAME?pullMsgs().then(bootmodule):$state.current.name===VAULT_CONST.EDIT_VAULT_STATE_NAME&&pullMsgs().then(pullVault).then(bootmodule)}]),angular.module("vaults").directive("vaultsList",["VAULT_CONST",function(VAULT_CONST){return{restrict:"E",transclude:!0,templateUrl:VAULT_CONST.VAULT_LIST_TEMPLATE_URL,link:function(){}}}]),angular.module("vaults").factory("Vaults",["$resource",function($resource){return $resource("vaults/:vaultId",{vaultId:"@_id"},{update:{method:"PUT"}})}]),angular.module("vaults").service("VaultLocaleMessages",["$http","$q",function($http,$q){return{pullMessages:function(){var _this=this,deferred=$q.defer();return _this.msgs?deferred.resolve(_this.msgs):$http.get("modules/vaults/json/labels.json").success(function(response){_this.msgs=response,deferred.resolve(_this.msgs)}),deferred.promise}}}]),angular.module("vaults").service("VaultStatics",["$http","$q",function($http){var vaultStatics={};return vaultStatics.queryVaults=function(trackerId,excludeVaults){return $http.get("/queryvaults/queryByTracker",{params:{tId:trackerId,exv:excludeVaults}})},vaultStatics}]),angular.module("vaults").factory("TrackerVaults",["$resource",function($resource){return $resource("trackervaults/:trackerId/:vaultId",null,{update:{method:"PUT",params:{vaultId:"vaultId"}},listTrackerVaults:{method:"GET",params:{trackerId:"trackerId"},isArray:!0}})}]);